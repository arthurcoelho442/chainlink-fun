version: '3'
services:
  postgres_chainlink:
    container_name: postgres_chainlink
    image: postgres:15.4-bullseye
    restart: unless-stopped
    env_file: .env
    ports:
      - ${PORT_DB}:5432
    environment:
      - POSTGRES_PASSWORD=${PASSWORD_DB}
    volumes:
      - ./postgres/init:/docker-entrypoint-initdb.d
      - postgres_chainlink:/var/lib/postgresql/data
    networks:
      - chainlinknet
  pgadmin4_chainlink:
    container_name: pgadmin4_chainlink
    build: 
      context: ./pgadmin4
    restart: unless-stopped
    ports:
      - ${PORT_PGADMIN}:80
    user: 'root'
    env_file: .env
    environment:
      # Usuario
      PGADMIN_DEFAULT_EMAIL:                    ${EMAIL}
      PGADMIN_DEFAULT_PASSWORD:                 ${PASSWORD}
      # Configuração
      PGADMIN_CONFIG_MASTER_PASSWORD_REQUIRED:  ${PASSWORD_REQUIRED}
      PGADMIN_CONFIG_SERVER_MODE:               'False'
    volumes:
      - pgadmin4_chainlink:/var/lib/pgadmin

    entrypoint: >
      /bin/sh -c '

        envsubst < /tmp/pgpass > /tmp/pgpass.temp
        envsubst < /pgadmin4/servers.json > /pgadmin4/servers.json.temp

        cp /tmp/pgpass.temp /tmp/pgpass
        cp /pgadmin4/servers.json.temp /pgadmin4/servers.json

        rm /tmp/pgpass.temp
        rm /pgadmin4/servers.json.temp

        chmod 600 /tmp/pgpass

        /entrypoint.sh
      '
    depends_on:
      - postgres_chainlink
    networks:
      - chainlinknet
  chainlink:
    container_name: chainlink
    image: "smartcontract/chainlink:2.14.0"
    env_file: .env
    depends_on:
      - postgres_chainlink
    restart: unless-stopped
    ports:
      - ${PORT_CHAINLINK}:6688
    volumes:
      - .\chainlink-sepolia:/chainlink/
    extra_hosts:
      - "host.docker.internal:host-gateway"
    command: node -config /chainlink/config.toml -secrets /chainlink/secrets.toml start -a /chainlink/.api
    networks:
      - chainlinknet

volumes:
  postgres_chainlink:
  pgadmin4_chainlink:

networks:
  chainlinknet:
    driver: bridge